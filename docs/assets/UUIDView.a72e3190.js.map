{"version":3,"file":"UUIDView.a72e3190.js","sources":["../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/regex.js","../../node_modules/uuid/dist/esm-browser/validate.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../src/store/uuid.ts","../../src/views/UUIDView.vue"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { ref } from 'vue'\r\nimport { createPinia, defineStore } from 'pinia'\r\n\r\n// 不能直接导出使用（需要设置订阅修改$subscribe、自定义获取数据$state的方法）\r\nconst uuidDefineStore = defineStore('uuid', {\r\n  state: () => ({\r\n    num: ref<number | string>(5), // 生成数量\r\n    separator: ref<boolean>(true), // 分隔符\r\n    upperCase: ref<boolean>(false), // 转大写\r\n    subLength: ref<number | undefined>() // 截取长度\r\n  }),\r\n  getters: {\r\n    /**\r\n     * 生成数量\r\n     * @param state\r\n     */\r\n    getNum (state) {\r\n      return state.num\r\n    },\r\n    /**\r\n     * 分隔符\r\n     * @param state\r\n     */\r\n    getSeparator (state) {\r\n      return state.separator\r\n    },\r\n    /**\r\n     * 转大写\r\n     * @param state\r\n     */\r\n    getUpperCase (state) {\r\n      return state.upperCase\r\n    },\r\n    /**\r\n     * 截取长度\r\n     * @param state\r\n     */\r\n    getSubLength (state) {\r\n      return state.subLength\r\n    }\r\n  },\r\n  actions: {\r\n    /**\r\n     * 生成数量\r\n     * @param num\r\n     */\r\n    setNum (num: number | string) {\r\n      this.num = num\r\n    },\r\n    /**\r\n     * 分隔符\r\n     * @param separator\r\n     */\r\n    setSeparator (separator: boolean) {\r\n      this.separator = separator\r\n    },\r\n    /**\r\n     * 转大写\r\n     * @param upperCase\r\n     */\r\n    setUpperCase (upperCase: boolean) {\r\n      this.upperCase = upperCase\r\n    },\r\n    /**\r\n     * 截取长度\r\n     * @param subLength\r\n     */\r\n    setSubLength (subLength: number | undefined) {\r\n      this.subLength = subLength\r\n    }\r\n  }\r\n})\r\n\r\nconst uuidStore = uuidDefineStore(createPinia())\r\n\r\n// 订阅缓存的修改\r\nuuidStore.$subscribe((mutation, state) => {\r\n  // 将缓存的修改放入本地缓存中\r\n  localStorage.setItem(uuidStore.$id, JSON.stringify({ ...state }))\r\n})\r\n\r\n// 获取历史缓存\r\nconst uuidStoreOld = localStorage.getItem(uuidStore.$id)\r\nif (uuidStoreOld) {\r\n  // 返回已存在的缓存\r\n  uuidStore.$state = JSON.parse(uuidStoreOld)\r\n}\r\n\r\n// 注意，在使用时，不用构造方法，直接调用即可\r\nexport default uuidStore\r\n","<template>\r\n  <el-row justify=\"space-evenly\">\r\n    <el-col :span=\"22\" class=\"text-center\">\r\n      <h1>UUID</h1>\r\n    </el-col>\r\n  </el-row>\r\n\r\n  <br>\r\n\r\n  <el-row justify=\"center\" :gutter=\"40\">\r\n    <el-col :span=\"11\">\r\n      <el-input v-model=\"subLength\" type=\"number\" placeholder=\"选择截取长度\">\r\n        <template #prepend>\r\n          <span>长度</span>\r\n        </template>\r\n      </el-input>\r\n    </el-col>\r\n    <el-col :span=\"11\">\r\n      <el-switch v-model=\"upperCase\" active-text=\"大写字母\" inactive-text=\"小写字母\"/>\r\n    </el-col>\r\n  </el-row>\r\n\r\n  <br>\r\n\r\n  <el-row justify=\"center\">\r\n    <el-col :span=\"22\">\r\n      <el-input v-model=\"num\" placeholder=\"请输入生成的个数\">\r\n        <template #prepend>\r\n          <el-select v-model=\"separator\" placeholder=\"选择是否带分隔符\" class=\"w-100px\">\r\n            <el-option :value=\"true\" label=\"带分隔符\"/>\r\n            <el-option :value=\"false\" label=\"不带分隔符\"/>\r\n          </el-select>\r\n        </template>\r\n        <template #append>\r\n          <el-button @click=\"generate\">生成</el-button>\r\n        </template>\r\n      </el-input>\r\n    </el-col>\r\n  </el-row>\r\n\r\n  <br>\r\n\r\n  <el-row class=\"text-center\">\r\n    <el-col :span=\"22\" v-for=\"data in dataList\" :key=\"data\">\r\n      <div class=\"uuid\" @dblclick=\"dblclickDiv\" data-dblclick=\"已复制到剪贴板\">\r\n        <!-- 转大写 -->\r\n        {{ upperCase ? data.toUpperCase() : data }}\r\n      </div>\r\n    </el-col>\r\n  </el-row>\r\n\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, watch } from 'vue'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { ElMessage, ElMessageBox } from 'element-plus'\r\n\r\nimport { dblclickDiv } from '../utils/clipboard'\r\nimport uuidStore from '../store/uuid'\r\n\r\n// 是否忽略警告\r\nconst warning = ref<boolean>(false)\r\n\r\n// 转大写\r\nconst upperCase = ref<boolean>(uuidStore.getUpperCase)\r\nwatch(() => upperCase.value, (newValue, oldValue) => {\r\n  uuidStore.setUpperCase(newValue)\r\n})\r\n\r\n// 长度\r\nconst subLength = ref<number | undefined>(uuidStore.getSubLength)\r\n// 最小长度\r\nconst subLengthMin = ref<number>(1)\r\n// 最大长度\r\nconst subLengthMax = ref<number>(36)\r\nwatch(() => subLength.value, (newValue, oldValue) => {\r\n  // @ts-ignore\r\n  if (newValue !== undefined && newValue !== '') {\r\n    if (newValue < subLengthMin.value) {\r\n      ElMessage({ message: `长度不能小于 ${subLengthMin.value}`, type: 'warning' })\r\n\r\n      subLength.value = subLengthMin.value\r\n      uuidStore.setSubLength(subLengthMin.value)\r\n    } else if (newValue > subLengthMax.value) {\r\n      ElMessage({ message: `长度不能大于 ${subLengthMax.value}`, type: 'warning' })\r\n\r\n      subLength.value = subLengthMax.value\r\n      uuidStore.setSubLength(subLengthMax.value)\r\n    } else {\r\n      uuidStore.setSubLength(newValue)\r\n    }\r\n  }\r\n})\r\n\r\n// 长度截取\r\nconst substring = (data: string) => {\r\n  if (subLength.value !== undefined) {\r\n    if (subLength.value < subLengthMin.value) {\r\n      // 长度小于最小长度，不做处理\r\n    } else if (subLength.value > subLengthMax.value) {\r\n      // 长度大于最大长度，不做处理\r\n    } else {\r\n      return data.substring(0, subLength.value)\r\n    }\r\n  }\r\n  return data\r\n}\r\n\r\n// 分隔符\r\nconst separator = ref<boolean>(uuidStore.getSeparator)\r\nwatch(() => separator.value, (newValue, oldValue) => {\r\n  uuidStore.setSeparator(newValue)\r\n})\r\n\r\n// 数量\r\nconst num = ref<number | string>(uuidStore.getNum)\r\nwatch(() => num.value, (newValue, oldValue) => {\r\n  uuidStore.setNum(newValue)\r\n})\r\n\r\n// 数据\r\nconst dataList = ref<string[]>([])\r\n\r\nconst generate = () => {\r\n  if (num.value === '') {\r\n    ElMessage({ message: '生成数量不能为空', type: 'warning' })\r\n    return\r\n  }\r\n\r\n  if (warning.value) {\r\n    exec()\r\n  } else {\r\n    const tmp = 10000\r\n    if (num.value > tmp) {\r\n      ElMessageBox.confirm(`纯 JavaScript 运算，生成数量超过 ${tmp}，可能会导致浏览器卡死，是否继续？`, '警告', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        warning.value = true\r\n        exec()\r\n      }).catch(() => {\r\n\r\n      })\r\n    } else {\r\n      exec()\r\n    }\r\n  }\r\n}\r\n\r\nconst exec = () => {\r\n  // 清空数据\r\n  dataList.value = []\r\n\r\n  // 循环添加\r\n  for (let i = 0; i < num.value; i++) {\r\n    if (separator.value) {\r\n      // 包含分隔符\r\n      dataList.value.push(substring(uuidv4()))\r\n    } else {\r\n      // 不包含分隔符\r\n      dataList.value.push(substring(uuidv4().replaceAll('-', '')))\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.uuid {\r\n  margin: 2px 0;\r\n}\r\n\r\n</style>\r\n"],"names":["getRandomValues","rnds8","rng","REGEX","validate","uuid","byteToHex","i","stringify","arr","offset","v4","options","buf","rnds","uuidDefineStore","defineStore","ref","state","num","separator","upperCase","subLength","uuidStore","createPinia","mutation","uuidStoreOld","warning","watch","newValue","oldValue","subLengthMin","subLengthMax","ElMessage","substring","data","dataList","generate","exec","ElMessageBox","uuidv4"],"mappings":"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"}