import{d as e,a as l,b as a,k as u,l as o,h as t,g as r}from"./element-plus-a17310d1.js";import{a as s}from"./clipboard-b18db9e2.js";import{d as n,c as i}from"./pinia-2a9439bb.js";import{r as c,u as p}from"./@vue-67bd3c9a.js";import{k as d,w as v,o as m,c as f,A as b,y as x,K as g,x as k,t as y,F as j,Y as h,Z as _,a as w}from"./vue-e1fd4543.js";import{_ as $}from"./index-c2408dab.js";import"./@vueuse-cc804279.js";import"./@popperjs-b78c3215.js";import"./@element-plus-893dda61.js";import"./lodash-es-7b2175ad.js";import"./memoize-one-63ab667a.js";import"./@ctrl-a951068a.js";import"./vue-clipboard3-12a5795a.js";import"./clipboard-b5f6a829.js";import"./bcryptjs-638ef99f.js";import"./vue-router-c701b404.js";const V=n("dockerImagesMigrate",{state:()=>({images:c("jimmidyson/configmap-reload:v0.5.0\ngrafana/grafana:9.3.2\n   \n   \n  quay.io/brancz/kube-rbac-proxy:v0.14.0\n   \n  quay.io/prometheus/node-exporter:v1.5.0   \n registry.k8s.io/prometheus-adapter/prometheus-adapter:v0.10.0 \n \n\nquay.io/prometheus-operator/prometheus-operator:v0.62.0       \n   \n    \n "),type:c("1"),repositoryUrl:c("registry.jihulab.com/xuxiaowei-cloud/xuxiaowei-cloud")}),getters:{},actions:{setImages(e){this.images=e},setType(e){this.type=e},setRepositoryUrl(e){this.repositoryUrl=e}}})(i());V.$subscribe(((e,l)=>{localStorage.setItem(V.$id,JSON.stringify({...l}))}));const U=localStorage.getItem(V.$id);U&&(V.$state=JSON.parse(U));const D=e=>(h("data-v-501a735e"),e=e(),_(),e),A=D((()=>w("h1",null,"Docker 镜像迁移",-1))),I=D((()=>w("li",null,"从一台机器中的镜像迁移到另外一台机器上",-1))),q=D((()=>w("li",null,"离线安装 kubernetes（k8s） 镜像导入命令",-1))),G=D((()=>w("li",null,"下载国外镜像，推送到国内镜像网站，实现镜像下载自由",-1))),L=D((()=>w("br",null,null,-1))),S=D((()=>w("br",null,null,-1))),T=D((()=>w("li",null,[g("仓库迁移模式，国内镜像网站推荐使用 "),w("a",{href:"https://jihulab.com"},"极狐GitLab")],-1))),z=D((()=>w("li",null,"极狐GitLab Docker 镜像的域名是 registry.jihulab.com",-1))),C=D((()=>w("li",null,"使用 极狐GitLab 储存镜像时，镜像名称需要使用 极狐GitLab 仓库名称作为前缀",-1))),J=D((()=>w("li",null,[g("例如：以 "),w("a",{href:"https://jihulab.com/xuxiaowei-cloud/xuxiaowei-cloud"},"https://jihulab.com/xuxiaowei-cloud/xuxiaowei-cloud"),g(" 项目为例，如果想把镜像推送到这个仓库名下，需要将镜像名修改为以 registry.jihulab.com/xuxiaowei-cloud/xuxiaowei-cloud 为前缀，推送镜像结果查看网站 "),w("a",{href:"https://jihulab.com/xuxiaowei-cloud/xuxiaowei-cloud/container_registry"},"https://jihulab.com/xuxiaowei-cloud/xuxiaowei-cloud/container_registry")],-1))),M=D((()=>w("br",null,null,-1))),N=D((()=>w("br",null,null,-1))),O=D((()=>w("br",null,null,-1))),R=D((()=>w("br",null,null,-1))),F=$(d({__name:"MigrateView",setup(n){const i=c(V.type);v((()=>i.value),((e,l)=>{V.setType(e)}));const d=c(V.repositoryUrl);v((()=>d.value),((e,l)=>{V.setRepositoryUrl(e)}));const h=c(V.images);v((()=>h.value),((e,l)=>{V.setImages(e)}));const _=c([]),w=c(""),$=c(0),U=c(16),D=e=>{const l=e.split("/");return l[0].includes(".")?l.slice(1).join("/"):e},F=()=>{if("1"===i.value);else if(""===d.value)return void e.error("仓库地址不能为空");const l=h.value.split("\n");_.value=[],w.value="",$.value=0;for(const e of l){const l=e.trim();""!==l&&(_.value.push(l),$.value++)}w.value+="\n# 拉取 docker 镜像命令\n";for(const e of _.value)w.value+=`docker pull ${e} \n`,$.value++;"1"===i.value?(()=>{w.value+="\n# 将 docker 镜像保存成文件的命令\n";for(const e of _.value)w.value+=`docker save -o ${e.replaceAll("/","-").replaceAll(":","-")}.tar ${e} \n`,$.value++;w.value+="\n# 将上面得到的结果上传到需要导入镜像的服务器上\n",w.value+="\n# docker 导入镜像命令\n";for(const e of _.value)w.value+=`docker load -i ${e.replaceAll("/","-").replaceAll(":","-")}.tar \n`,$.value++;w.value+="\n# kubernetes（k8s） 导入镜像命令\n";for(const e of _.value)w.value+=`ctr -n=k8s.io image import ${e.replaceAll("/","-").replaceAll(":","-")}.tar \n`,$.value++})():(()=>{w.value+="\n# 镜像重名到自己的仓库\n";for(const e of _.value)w.value+=`docker tag ${e} ${d.value}/${D(e)} \n`,$.value++;w.value+="\n# 请先登录 Docker 仓库后再执行推送命令\n",w.value+="\n# 镜像推送到自己的仓库\n";for(const e of _.value)w.value+=`docker push ${d.value}/${D(e)} \n`,$.value++;w.value+="\n# 将上面推送到自己仓库的镜像拉取到需要导入镜像的服务器中，并恢复原始名称\n",w.value+="\n# kubernetes（k8s） 拉取镜像 \n";for(const e of _.value)w.value+=`ctr -n=k8s.io image pull ${d.value}/${D(e)} \n`,$.value++;w.value+="\n# kubernetes（k8s） 恢复原始镜像名称 \n";for(const e of _.value)w.value+=`ctr -n=k8s.io image tag ${d.value}/${D(e)} ${e} \n`,$.value++})(),U.value=$.value+16};return(e,n)=>{const c=l,v=a,_=u,$=o,V=t,D=r;return m(),f(j,null,[b(v,{justify:"space-evenly"},{default:x((()=>[b(c,{span:22,class:"text-center"},{default:x((()=>[A,I,q,G])),_:1})])),_:1}),L,b(v,{class:"text-center"},{default:x((()=>[b(c,{span:22},{default:x((()=>[b($,{modelValue:i.value,"onUpdate:modelValue":n[0]||(n[0]=e=>i.value=e)},{default:x((()=>[b(_,{border:"",label:"1"},{default:x((()=>[g("人工迁移命令")])),_:1}),b(_,{border:"",label:"2"},{default:x((()=>[g("仓库迁移命令")])),_:1})])),_:1},8,["modelValue"])])),_:1})])),_:1}),S,b(v,{justify:"center",gutter:20},{default:x((()=>[b(c,{span:22},{default:x((()=>[T,z,C,J])),_:1})])),_:1}),M,b(v,{justify:"center",gutter:20},{default:x((()=>[b(c,{span:22},{default:x((()=>[b(V,{onClick:F,class:"get-command-button"},{default:x((()=>[g("获取命令")])),_:1})])),_:1})])),_:1}),N,"1"!==i.value?(m(),k(v,{key:0,justify:"center",gutter:20},{default:x((()=>[b(c,{span:22},{default:x((()=>[b(D,{placeholder:"仓库地址，如：registry.jihulab.com/xuxiaowei-cloud/xuxiaowei-cloud",modelValue:d.value,"onUpdate:modelValue":n[1]||(n[1]=e=>d.value=e)},null,8,["modelValue"])])),_:1})])),_:1})):y("",!0),O,b(v,{justify:"center",gutter:20},{default:x((()=>[b(c,{span:22},{default:x((()=>[b(D,{modelValue:h.value,"onUpdate:modelValue":n[2]||(n[2]=e=>h.value=e),class:"token-input",placeholder:"请填写镜像名称，每行一个镜像",type:"textarea",onDblclick:p(s),rows:"16"},null,8,["modelValue","onDblclick"])])),_:1})])),_:1}),R,b(v,{justify:"center",gutter:20},{default:x((()=>[b(c,{span:22},{default:x((()=>[b(D,{modelValue:w.value,"onUpdate:modelValue":n[3]||(n[3]=e=>w.value=e),class:"token-input",placeholder:"结果",type:"textarea",onDblclick:p(s),rows:U.value,"data-dblclick":"结果已复制到剪贴板"},null,8,["modelValue","onDblclick","rows"])])),_:1})])),_:1})],64)}}}),[["__scopeId","data-v-501a735e"]]);export{F as default};
